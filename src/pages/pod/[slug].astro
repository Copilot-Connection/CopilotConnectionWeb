---
import config from "@config/config.json";
import Base from "@layouts/Base.astro";
import PodPagination from "@layouts/components/PodPagination.astro";

import Podcasts from "@layouts/Podcasts.astro";
import {  getPodcasts } from "@lib/contentParser.astro";
import { sortPodByDate } from "@lib/utils/sortFunctions";
import { getSinglePage } from "@lib/contentParser.astro";
import { sortByDate } from "@lib/utils/sortFunctions";

export async function getStaticPaths() {
  const podcasts = await getPodcasts();
  const sortedPodcasts = sortPodByDate(podcasts);
  const totalPods = Math.ceil(podcasts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPods; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const { slug } = Astro.params;
const podcasts = await getPodcasts();
const sortedPodcasts = sortPodByDate(podcasts);
const totalPods = Math.ceil(podcasts.length / config.settings.pagination);
const currentPods = sortedPodcasts.slice(0, config.settings.pagination);

const currentPod = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPod = currentPod * config.settings.pagination;
const indexOfFirstPod = indexOfLastPod - config.settings.pagination;
const currentPosts = sortedPodcasts.slice(indexOfFirstPod, indexOfLastPod);
---

<Base>
  <section class="section">
    <div class="container">
      <h1>Hi there {slug}</h1>
      <Podcasts podcasts={podcasts} className="mb-16" />
      <PodPagination totalPages={totalPods} currentPage={currentPod} />
    </div>
  </section>
</Base>
